{"remainingRequest":"/home/ashaban/vmmc/node_modules/babel-loader/lib/index.js!/home/ashaban/vmmc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ashaban/vmmc/src/components/questions/Module1Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ashaban/vmmc/src/components/questions/Module1Admin.vue","mtime":1546700803870},{"path":"/home/ashaban/vmmc/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/ashaban/vmmc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ashaban/vmmc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { module1 } from './module1.js';\nimport { required, numeric } from 'vuelidate/lib/validators';\nexport default {\n  validations: {\n    situationText: {\n      required: required\n    },\n    questionNumber: {\n      numeric: numeric,\n      required: required\n    },\n    choice1: {\n      required: required\n    },\n    choice1Comment: {\n      required: required\n    },\n    choice1Impact: {\n      required: required\n    },\n    choice2: {\n      required: required\n    },\n    choice2Comment: {\n      required: required\n    },\n    choice2Impact: {\n      required: required\n    },\n    choice3: {\n      required: required\n    },\n    choice3Comment: {\n      required: required\n    },\n    choice3Impact: {\n      required: required\n    }\n  },\n  data: function data() {\n    return {\n      clients: Object.keys(module1),\n      questions: module1,\n      addQnDialog: false,\n      situationText: \"\",\n      questionNumber: \"\",\n      choice1: \"\",\n      choice1Comment: \"\",\n      choice1Impact: \"\",\n      choice2: \"\",\n      choice2Comment: \"\",\n      choice2Impact: \"\",\n      choice3: \"\",\n      choice3Comment: \"\",\n      choice3Impact: \"\",\n      activeClient: \"\"\n    };\n  },\n  methods: {\n    displayAddQnDialog: function displayAddQnDialog(client) {\n      this.addQnDialog = true;\n      this.activeClient = client;\n    },\n    saveQuestion: function saveQuestion() {\n      console.log(this.activeClient);\n      console.log(Object.keys(module1[this.activeClient]));\n      module1[this.activeClient][this.questionNumber - 1] = {};\n      console.log(Object.keys(module1[this.activeClient]));\n      module1[this.activeClient][this.questionNumber - 1].situationText = this.situationText;\n      console.log(JSON.stringify(module1[this.activeClient][this.questionNumber - 1]));\n      module1[this.activeClient][this.questionNumber - 1].choices = [];\n      module1[this.activeClient][this.questionNumber - 1].choices.push({\n        'choiceText': this.choice1,\n        'comment': this.choice1Comment,\n        'impact': this.choice1Impact\n      });\n      /*\n      module1[this.activeClient][this.questionNumber-1].choices.push(\n        {\n          'choiceText': this.choice2,\n          'comment': this.choice2Comment,\n          'impact': this.choice2Impact\n        }\n      )\n      module1[this.activeClient][this.questionNumber-1].choices.push(\n        {\n          'choiceText': this.choice3,\n          'comment': this.choice3Comment,\n          'impact': this.choice3Impact\n        }\n      )*/\n\n      this.addQnDialog = false;\n    }\n  },\n  computed: {\n    situationTextErrors: function situationTextErrors() {\n      var errors = [];\n      if (!this.$v.situationText.$dirty) return errors;\n      !this.$v.situationText.required && errors.push('situation Text is required');\n      return errors;\n    },\n    questionNumberErrors: function questionNumberErrors() {\n      var errors = [];\n      if (!this.$v.questionNumber.$dirty) return errors;\n      !this.$v.questionNumber.numeric && errors.push('Question Number Must be integer');\n      !this.$v.questionNumber.required && errors.push('Question Number is required');\n      return errors;\n    },\n    choice1Errors: function choice1Errors() {\n      var errors = [];\n      if (!this.$v.choice1.$dirty) return errors;\n      !this.$v.choice1.required && errors.push('choice1 Text is required');\n      return errors;\n    },\n    choice1CommentErrors: function choice1CommentErrors() {\n      var errors = [];\n      if (!this.$v.choice1Comment.$dirty) return errors;\n      !this.$v.choice1Comment.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice1ImpactErrors: function choice1ImpactErrors() {\n      var errors = [];\n      if (!this.$v.choice1Impact.$dirty) return errors;\n      !this.$v.choice1Impact.required && errors.push('Choice1 Impact Text is required');\n\n      if (parseInt(this.choice1Impact) !== 0) {\n        if (this.choice1Impact[0] !== undefined) {\n          if (this.choice1Impact[0] !== \"-\" && this.choice1Impact[0] !== \"+\") {\n            errors.push(\"Impact must start with + or -\");\n          } else if (!Number.isInteger(parseInt(this.choice1Impact[1]))) {\n            errors.push(\"Impact must be a number\");\n          }\n        }\n      }\n\n      return errors;\n    },\n    choice2Errors: function choice2Errors() {\n      var errors = [];\n      if (!this.$v.choice2.$dirty) return errors;\n      !this.$v.choice2.required && errors.push('choice2 Text is required');\n      return errors;\n    },\n    choice2CommentErrors: function choice2CommentErrors() {\n      var errors = [];\n      if (!this.$v.choice2Comment.$dirty) return errors;\n      !this.$v.choice2Comment.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice2ImpactErrors: function choice2ImpactErrors() {\n      var errors = [];\n      if (!this.$v.choice2Impact.$dirty) return errors;\n      !this.$v.choice2Impact.required && errors.push('choice2 Impact Text is required');\n      return errors;\n    },\n    choice3Errors: function choice3Errors() {\n      var errors = [];\n      if (!this.$v.choice3.$dirty) return errors;\n      !this.$v.choice3.required && errors.push('choice3 Text is required');\n      return errors;\n    },\n    choice3CommentErrors: function choice3CommentErrors() {\n      var errors = [];\n      if (!this.$v.choice3Comment.$dirty) return errors;\n      !this.$v.choice3Comment.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice3ImpactErrors: function choice3ImpactErrors() {\n      var errors = [];\n      if (!this.$v.choice3Impact.$dirty) return errors;\n      !this.$v.choice3Impact.required && errors.push('choice3 Impact Text is required');\n      return errors;\n    }\n  }\n};",{"version":3,"sources":["Module1Admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n    <v-expansion-panel>\n      <v-expansion-panel-content\n        v-for=\"(item,i) in clients.length\"\n        :key=\"i\"\n      >\n        <div slot=\"header\">{{clients[item-1]}}</div>\n        <v-btn color=\"success\" @click='displayAddQnDialog(clients[item-1])'>Add Question</v-btn>\n        <v-card>\n          <v-card-text>\n            <ol>\n              <li v-for=\"(qn, key) in Object.keys(questions[clients[item-1]]).length\">\n                {{questions[clients[item-1]][key].situationText}}\n                <ul>\n                  <li v-for=\"ch in questions[clients[item-1]][qn-1].choices.length\">\n                    <v-list two-line>\n                      <li>\n                        Choice Text -> {{questions[clients[item-1]][qn-1].choices[ch-1].choiceText}}\n                      </li>\n                      <li>\n                        Comment -> {{questions[clients[item-1]][qn-1].choices[ch-1].comment}}\n                      </li>\n                      <li>\n                        Impact -> {{questions[clients[item-1]][qn-1].choices[ch-1].impact}}\n                      </li>\n                    </v-list>\n                  </li>\n                </ul>\n              </li>\n            </ol>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n\n    <v-dialog persistent v-model=\"addQnDialog\" transition=\"scale-transition\" max-width=\"560px\" max-height=\"647px\">\n      <v-card >\n        <v-toolbar color=\"primary\" dark>\n          <v-toolbar-title>\n            Add Question\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-icon @click=\"addQnDialog = false\">close</v-icon>\n        </v-toolbar>\n        <v-card-text>\n          <v-layout column>\n            <v-flex>\n              <v-text-field v-model=\"questionNumber\" \n                @blur=\"$v.questionNumber.$touch()\"\n                @change=\"$v.questionNumber.$touch()\"\n                :error-messages=\"questionNumberErrors\"\n                required\n                label=\"Question Number\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"situationText\" \n                @blur=\"$v.situationText.$touch()\"\n                @change=\"$v.situationText.$touch()\"\n                :error-messages=\"situationTextErrors\"\n                required\n                label=\"Question Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice1\" \n                @blur=\"$v.choice1.$touch()\"\n                @change=\"$v.choice1.$touch()\"\n                :error-messages=\"choice1Errors\"\n                required\n                label=\"Choice1 Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice1Comment\" \n                @blur=\"$v.choice1Comment.$touch()\"\n                @change=\"$v.choice1Comment.$touch()\"\n                :error-messages=\"choice1CommentErrors\"\n                required\n                label=\"Choice1 Comment\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice1Impact\" \n                @blur=\"$v.choice1Impact.$touch()\"\n                @change=\"$v.choice1Impact.$touch()\"\n                :error-messages=\"choice1ImpactErrors\"\n                required\n                label=\"Choice1 Impact\">\n              </v-text-field>\n            </v-flex>\n            <v-divider></v-divider>\n            <v-flex>\n              <v-text-field v-model=\"choice2\" \n                @blur=\"$v.choice2.$touch()\"\n                @change=\"$v.choice2.$touch()\"\n                :error-messages=\"choice2Errors\"\n                required\n                label=\"choice2 Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice2Comment\" \n                @blur=\"$v.choice2Comment.$touch()\"\n                @change=\"$v.choice2Comment.$touch()\"\n                :error-messages=\"choice2CommentErrors\"\n                required\n                label=\"choice2 Comment\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice2Impact\" \n                @blur=\"$v.choice2Impact.$touch()\"\n                @change=\"$v.choice2Impact.$touch()\"\n                :error-messages=\"choice2ImpactErrors\"\n                required\n                label=\"choice2 Impact\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice3\" \n                @blur=\"$v.choice3.$touch()\"\n                @change=\"$v.choice3.$touch()\"\n                :error-messages=\"choice3Errors\"\n                required\n                label=\"choice3 Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice3Comment\" \n                @blur=\"$v.choice3Comment.$touch()\"\n                @change=\"$v.choice3Comment.$touch()\"\n                :error-messages=\"choice3CommentErrors\"\n                required\n                label=\"choice3 Comment\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice3Impact\" \n                @blur=\"$v.choice3Impact.$touch()\"\n                @change=\"$v.choice3Impact.$touch()\"\n                :error-messages=\"choice3ImpactErrors\"\n                required\n                label=\"choice3 Impact\">\n              </v-text-field>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n        \n        <v-toolbar color=\"brown lighten-6\">\n          <v-btn color=\"error\" @click.native=\"addQnDialog = false\"><v-icon left>cancel</v-icon> Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" :disabled=\"$v.$invalid\" dark @click=\"saveQuestion\"><v-icon left>save</v-icon>Save Question</v-btn>\n          <v-btn color=\"primary\" @click=\"saveQuestion\"><v-icon left>save</v-icon>Save Question</v-btn>\n        </v-toolbar>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n<script>\nimport { module1 } from './module1.js'\nimport { required, numeric } from 'vuelidate/lib/validators'\nexport default {\n  validations: {\n    situationText: { required },\n    questionNumber: { numeric, required },\n    choice1: { required },\n    choice1Comment: { required },\n    choice1Impact: { required },\n    choice2: { required },\n    choice2Comment: { required },\n    choice2Impact: { required },\n    choice3: { required },\n    choice3Comment: { required },\n    choice3Impact: { required },\n  },\n  data () {\n    return {\n      clients: Object.keys(module1),\n      questions: module1,\n      addQnDialog: false,\n      situationText: \"\",\n      questionNumber: \"\",\n      choice1: \"\",\n      choice1Comment: \"\",\n      choice1Impact: \"\",\n      choice2: \"\",\n      choice2Comment: \"\",\n      choice2Impact: \"\",\n      choice3: \"\",\n      choice3Comment: \"\",\n      choice3Impact: \"\",\n      activeClient: \"\",\n    }\n  },\n  methods: {\n    displayAddQnDialog (client) {\n      this.addQnDialog = true\n      this.activeClient = client\n    },\n    saveQuestion () {\n      console.log(this.activeClient)\n      console.log(Object.keys(module1[this.activeClient]))\n      module1[this.activeClient][this.questionNumber-1] = {}\n      console.log(Object.keys(module1[this.activeClient]))\n      module1[this.activeClient][this.questionNumber-1].situationText = this.situationText\n      console.log(JSON.stringify(module1[this.activeClient][this.questionNumber-1]))\n      module1[this.activeClient][this.questionNumber-1].choices = []\n      \n      module1[this.activeClient][this.questionNumber-1].choices.push(\n        {\n          'choiceText': this.choice1,\n          'comment': this.choice1Comment,\n          'impact': this.choice1Impact\n        }\n      )\n      /*\n      module1[this.activeClient][this.questionNumber-1].choices.push(\n        {\n          'choiceText': this.choice2,\n          'comment': this.choice2Comment,\n          'impact': this.choice2Impact\n        }\n      )\n      module1[this.activeClient][this.questionNumber-1].choices.push(\n        {\n          'choiceText': this.choice3,\n          'comment': this.choice3Comment,\n          'impact': this.choice3Impact\n        }\n      )*/\n      this.addQnDialog = false\n    }\n  },\n  computed: {\n    situationTextErrors () {\n      const errors = []\n      if (!this.$v.situationText.$dirty) return errors\n      !this.$v.situationText.required && errors.push('situation Text is required')\n      return errors\n    },\n    questionNumberErrors () {\n      const errors = []\n      if (!this.$v.questionNumber.$dirty) return errors\n      !this.$v.questionNumber.numeric && errors.push('Question Number Must be integer')\n      !this.$v.questionNumber.required && errors.push('Question Number is required')\n      return errors\n    },\n    choice1Errors () {\n      const errors = []\n      if (!this.$v.choice1.$dirty) return errors\n      !this.$v.choice1.required && errors.push('choice1 Text is required')\n      return errors\n    },\n    choice1CommentErrors () {\n      const errors = []\n      if (!this.$v.choice1Comment.$dirty) return errors\n      !this.$v.choice1Comment.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice1ImpactErrors () {\n      const errors = []\n      if (!this.$v.choice1Impact.$dirty) return errors\n      !this.$v.choice1Impact.required && errors.push('Choice1 Impact Text is required')\n      if(parseInt(this.choice1Impact) !== 0) {\n        if(this.choice1Impact[0] !== undefined) {\n          if (this.choice1Impact[0] !== \"-\" && this.choice1Impact[0] !== \"+\") {\n            errors.push(\"Impact must start with + or -\")\n          }\n          else if(!Number.isInteger(parseInt(this.choice1Impact[1]))) {\n            errors.push(\"Impact must be a number\")\n          }\n        }\n      }\n      return errors\n    },\n    choice2Errors () {\n      const errors = []\n      if (!this.$v.choice2.$dirty) return errors\n      !this.$v.choice2.required && errors.push('choice2 Text is required')\n      return errors\n    },\n    choice2CommentErrors () {\n      const errors = []\n      if (!this.$v.choice2Comment.$dirty) return errors\n      !this.$v.choice2Comment.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice2ImpactErrors () {\n      const errors = []\n      if (!this.$v.choice2Impact.$dirty) return errors\n      !this.$v.choice2Impact.required && errors.push('choice2 Impact Text is required')\n      return errors\n    },\n    choice3Errors () {\n      const errors = []\n      if (!this.$v.choice3.$dirty) return errors\n      !this.$v.choice3.required && errors.push('choice3 Text is required')\n      return errors\n    },\n    choice3CommentErrors () {\n      const errors = []\n      if (!this.$v.choice3Comment.$dirty) return errors\n      !this.$v.choice3Comment.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice3ImpactErrors () {\n      const errors = []\n      if (!this.$v.choice3Impact.$dirty) return errors\n      !this.$v.choice3Impact.required && errors.push('choice3 Impact Text is required')\n      return errors\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/questions"}]}