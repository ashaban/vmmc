{"remainingRequest":"/home/ashaban/vmmc/frontend/node_modules/babel-loader/lib/index.js!/home/ashaban/vmmc/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ashaban/vmmc/frontend/src/components/questions/Module1Admin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/ashaban/vmmc/frontend/src/components/questions/Module1Admin.vue","mtime":1546863254824},{"path":"/home/ashaban/vmmc/frontend/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/ashaban/vmmc/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/ashaban/vmmc/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar module1 = require('./module1.js');\n\nimport { required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\n\nvar config = require('../../../config');\n\nvar isProduction = process.env.NODE_ENV === 'production';\nvar backendServer = isProduction ? config.build.backend : config.dev.backend;\nexport default {\n  validations: {\n    situationText: {\n      required: required\n    },\n    choice1: {\n      required: required\n    },\n    choice1Comment: {\n      required: required\n    },\n    choice1Impact: {\n      required: required\n    },\n    choice2: {\n      required: required\n    },\n    choice2Comment: {\n      required: required\n    },\n    choice2Impact: {\n      required: required\n    },\n    choice3: {\n      required: required\n    },\n    choice3Comment: {\n      required: required\n    },\n    choice3Impact: {\n      required: required\n    }\n  },\n  data: function data() {\n    return {\n      clients: Object.keys(module1),\n      questions: module1,\n      addQnDialog: false,\n      situationText: \"\",\n      choice1: \"\",\n      choice1Comment: \"\",\n      choice1Impact: \"\",\n      choice2: \"\",\n      choice2Comment: \"\",\n      choice2Impact: \"\",\n      choice3: \"\",\n      choice3Comment: \"\",\n      choice3Impact: \"\",\n      activeClient: \"\"\n    };\n  },\n  methods: {\n    displayAddQnDialog: function displayAddQnDialog(client) {\n      this.addQnDialog = true;\n      this.activeClient = client;\n    },\n    saveQuestion: function saveQuestion() {\n      var _this = this;\n\n      var formData = new FormData();\n      formData.append('client', this.activeClient);\n      formData.append('situationText', this.situationText);\n      formData.append('choice1', this.choice1);\n      formData.append('choice1Comment', this.choice1Comment);\n      formData.append('choice1Impact', this.choice1Impact);\n      formData.append('choice2', this.choice2);\n      formData.append('choice2Comment', this.choice2Comment);\n      formData.append('choice2Impact', this.choice2Impact);\n      formData.append('choice3', this.choice3);\n      formData.append('choice3Comment', this.choice3Comment);\n      formData.append('choice3Impact', this.choice3Impact);\n      axios.post(backendServer + '/saveModule2Question/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(function () {\n        _this.addQnDialog = false;\n      });\n    }\n  },\n  computed: {\n    situationTextErrors: function situationTextErrors() {\n      var errors = [];\n      if (!this.$v.situationText.$dirty) return errors;\n      !this.$v.situationText.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice1Errors: function choice1Errors() {\n      var errors = [];\n      if (!this.$v.choice1.$dirty) return errors;\n      !this.$v.choice1.required && errors.push('choice1 Text is required');\n      return errors;\n    },\n    choice1CommentErrors: function choice1CommentErrors() {\n      var errors = [];\n      if (!this.$v.choice1Comment.$dirty) return errors;\n      !this.$v.choice1Comment.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice1ImpactErrors: function choice1ImpactErrors() {\n      var errors = [];\n      if (!this.$v.choice1Impact.$dirty) return errors;\n      !this.$v.choice1Impact.required && errors.push('Choice1 Impact Text is required');\n\n      if (parseInt(this.choice1Impact) !== 0) {\n        if (this.choice1Impact[0] !== undefined) {\n          if (this.choice1Impact[0] !== \"-\" && this.choice1Impact[0] !== \"+\") {\n            errors.push(\"Impact must start with + or -\");\n          } else if (!Number.isInteger(parseInt(this.choice1Impact[1]))) {\n            errors.push(\"Impact must be a number\");\n          }\n        }\n      }\n\n      return errors;\n    },\n    choice2Errors: function choice2Errors() {\n      var errors = [];\n      if (!this.$v.choice2.$dirty) return errors;\n      !this.$v.choice2.required && errors.push('choice2 Text is required');\n      return errors;\n    },\n    choice2CommentErrors: function choice2CommentErrors() {\n      var errors = [];\n      if (!this.$v.choice2Comment.$dirty) return errors;\n      !this.$v.choice2Comment.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice2ImpactErrors: function choice2ImpactErrors() {\n      var errors = [];\n      if (!this.$v.choice2Impact.$dirty) return errors;\n      !this.$v.choice2Impact.required && errors.push('choice2 Impact Text is required');\n      return errors;\n    },\n    choice3Errors: function choice3Errors() {\n      var errors = [];\n      if (!this.$v.choice3.$dirty) return errors;\n      !this.$v.choice3.required && errors.push('choice3 Text is required');\n      return errors;\n    },\n    choice3CommentErrors: function choice3CommentErrors() {\n      var errors = [];\n      if (!this.$v.choice3Comment.$dirty) return errors;\n      !this.$v.choice3Comment.required && errors.push('situation Text is required');\n      return errors;\n    },\n    choice3ImpactErrors: function choice3ImpactErrors() {\n      var errors = [];\n      if (!this.$v.choice3Impact.$dirty) return errors;\n      !this.$v.choice3Impact.required && errors.push('choice3 Impact Text is required');\n      return errors;\n    }\n  }\n};",{"version":3,"sources":["Module1Admin.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container>\n    <v-expansion-panel>\n      <v-expansion-panel-content\n        v-for=\"(item,i) in clients.length\"\n        :key=\"i\"\n      >\n        <div slot=\"header\">{{clients[item-1]}}</div>\n        <v-btn color=\"success\" @click='displayAddQnDialog(clients[item-1])'>Add Question</v-btn>\n        <v-card>\n          <v-card-text>\n            <ol>\n              <li v-for=\"(qn, key) in Object.keys(questions[clients[item-1]]).length\">\n                {{questions[clients[item-1]][key].situationText}}\n                <ul>\n                  <li v-for=\"ch in questions[clients[item-1]][key].choices.length\">\n                    <v-list two-line>\n                      <li>\n                        Choice Text -> {{questions[clients[item-1]][key].choices[ch-1].choiceText}}\n                      </li>\n                      <li>\n                        Comment -> {{questions[clients[item-1]][key].choices[ch-1].comment}}\n                      </li>\n                      <li>\n                        Impact -> {{questions[clients[item-1]][key].choices[ch-1].impact}}\n                      </li>\n                    </v-list>\n                  </li>\n                </ul>\n              </li>\n            </ol>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n\n    <v-dialog persistent v-model=\"addQnDialog\" transition=\"scale-transition\" max-width=\"560px\" max-height=\"647px\">\n      <v-card >\n        <v-toolbar color=\"primary\" dark>\n          <v-toolbar-title>\n            Add Question\n          </v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-icon @click=\"addQnDialog = false\">close</v-icon>\n        </v-toolbar>\n        <v-card-text>\n          <v-layout column>\n            <v-flex>\n              <v-text-field v-model=\"situationText\" \n                @blur=\"$v.situationText.$touch()\"\n                @change=\"$v.situationText.$touch()\"\n                :error-messages=\"situationTextErrors\"\n                required\n                label=\"Question Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice1\" \n                @blur=\"$v.choice1.$touch()\"\n                @change=\"$v.choice1.$touch()\"\n                :error-messages=\"choice1Errors\"\n                required\n                label=\"Choice1 Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice1Comment\" \n                @blur=\"$v.choice1Comment.$touch()\"\n                @change=\"$v.choice1Comment.$touch()\"\n                :error-messages=\"choice1CommentErrors\"\n                required\n                label=\"Choice1 Comment\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice1Impact\" \n                @blur=\"$v.choice1Impact.$touch()\"\n                @change=\"$v.choice1Impact.$touch()\"\n                :error-messages=\"choice1ImpactErrors\"\n                required\n                label=\"Choice1 Impact\">\n              </v-text-field>\n            </v-flex>\n            <v-divider></v-divider>\n            <v-flex>\n              <v-text-field v-model=\"choice2\" \n                @blur=\"$v.choice2.$touch()\"\n                @change=\"$v.choice2.$touch()\"\n                :error-messages=\"choice2Errors\"\n                required\n                label=\"choice2 Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice2Comment\" \n                @blur=\"$v.choice2Comment.$touch()\"\n                @change=\"$v.choice2Comment.$touch()\"\n                :error-messages=\"choice2CommentErrors\"\n                required\n                label=\"choice2 Comment\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice2Impact\" \n                @blur=\"$v.choice2Impact.$touch()\"\n                @change=\"$v.choice2Impact.$touch()\"\n                :error-messages=\"choice2ImpactErrors\"\n                required\n                label=\"choice2 Impact\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice3\" \n                @blur=\"$v.choice3.$touch()\"\n                @change=\"$v.choice3.$touch()\"\n                :error-messages=\"choice3Errors\"\n                required\n                label=\"choice3 Text\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice3Comment\" \n                @blur=\"$v.choice3Comment.$touch()\"\n                @change=\"$v.choice3Comment.$touch()\"\n                :error-messages=\"choice3CommentErrors\"\n                required\n                label=\"choice3 Comment\">\n              </v-text-field>\n            </v-flex>\n            <v-flex>\n              <v-text-field v-model=\"choice3Impact\" \n                @blur=\"$v.choice3Impact.$touch()\"\n                @change=\"$v.choice3Impact.$touch()\"\n                :error-messages=\"choice3ImpactErrors\"\n                required\n                label=\"choice3 Impact\">\n              </v-text-field>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n        \n        <v-toolbar color=\"brown lighten-6\">\n          <v-btn color=\"error\" @click.native=\"addQnDialog = false\"><v-icon left>cancel</v-icon> Cancel</v-btn>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" :disabled=\"$v.$invalid\" dark @click=\"saveQuestion\"><v-icon left>save</v-icon>Save Question</v-btn>\n          <v-btn color=\"primary\" @click=\"saveQuestion\"><v-icon left>save</v-icon>Save Question</v-btn>\n        </v-toolbar>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n<script>\nlet module1 = require('./module1.js')\nimport { required } from 'vuelidate/lib/validators'\nimport axios from 'axios'\nconst config = require('../../../config')\nconst isProduction = process.env.NODE_ENV === 'production'\nconst backendServer = (isProduction ? config.build.backend : config.dev.backend)\nexport default {\n  validations: {\n    situationText: { required },\n    choice1: { required },\n    choice1Comment: { required },\n    choice1Impact: { required },\n    choice2: { required },\n    choice2Comment: { required },\n    choice2Impact: { required },\n    choice3: { required },\n    choice3Comment: { required },\n    choice3Impact: { required },\n  },\n  data () {\n    return {\n      clients: Object.keys(module1),\n      questions: module1,\n      addQnDialog: false,\n      situationText: \"\",\n      choice1: \"\",\n      choice1Comment: \"\",\n      choice1Impact: \"\",\n      choice2: \"\",\n      choice2Comment: \"\",\n      choice2Impact: \"\",\n      choice3: \"\",\n      choice3Comment: \"\",\n      choice3Impact: \"\",\n      activeClient: \"\",\n    }\n  },\n  methods: {\n    displayAddQnDialog (client) {\n      this.addQnDialog = true\n      this.activeClient = client\n    },\n    saveQuestion () {\n      let formData = new FormData()\n      formData.append('client', this.activeClient)\n      formData.append('situationText', this.situationText)\n      formData.append('choice1', this.choice1)\n      formData.append('choice1Comment', this.choice1Comment)\n      formData.append('choice1Impact', this.choice1Impact)\n      formData.append('choice2', this.choice2)\n      formData.append('choice2Comment', this.choice2Comment)\n      formData.append('choice2Impact', this.choice2Impact)\n      formData.append('choice3', this.choice3)\n      formData.append('choice3Comment', this.choice3Comment)\n      formData.append('choice3Impact', this.choice3Impact)\n      axios.post(backendServer + '/saveModule2Question/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(() => {\n        this.addQnDialog = false\n      })\n    }\n  },\n  computed: {\n    situationTextErrors () {\n      const errors = []\n      if (!this.$v.situationText.$dirty) return errors\n      !this.$v.situationText.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice1Errors () {\n      const errors = []\n      if (!this.$v.choice1.$dirty) return errors\n      !this.$v.choice1.required && errors.push('choice1 Text is required')\n      return errors\n    },\n    choice1CommentErrors () {\n      const errors = []\n      if (!this.$v.choice1Comment.$dirty) return errors\n      !this.$v.choice1Comment.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice1ImpactErrors () {\n      const errors = []\n      if (!this.$v.choice1Impact.$dirty) return errors\n      !this.$v.choice1Impact.required && errors.push('Choice1 Impact Text is required')\n      if(parseInt(this.choice1Impact) !== 0) {\n        if(this.choice1Impact[0] !== undefined) {\n          if (this.choice1Impact[0] !== \"-\" && this.choice1Impact[0] !== \"+\") {\n            errors.push(\"Impact must start with + or -\")\n          }\n          else if(!Number.isInteger(parseInt(this.choice1Impact[1]))) {\n            errors.push(\"Impact must be a number\")\n          }\n        }\n      }\n      return errors\n    },\n    choice2Errors () {\n      const errors = []\n      if (!this.$v.choice2.$dirty) return errors\n      !this.$v.choice2.required && errors.push('choice2 Text is required')\n      return errors\n    },\n    choice2CommentErrors () {\n      const errors = []\n      if (!this.$v.choice2Comment.$dirty) return errors\n      !this.$v.choice2Comment.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice2ImpactErrors () {\n      const errors = []\n      if (!this.$v.choice2Impact.$dirty) return errors\n      !this.$v.choice2Impact.required && errors.push('choice2 Impact Text is required')\n      return errors\n    },\n    choice3Errors () {\n      const errors = []\n      if (!this.$v.choice3.$dirty) return errors\n      !this.$v.choice3.required && errors.push('choice3 Text is required')\n      return errors\n    },\n    choice3CommentErrors () {\n      const errors = []\n      if (!this.$v.choice3Comment.$dirty) return errors\n      !this.$v.choice3Comment.required && errors.push('situation Text is required')\n      return errors\n    },\n    choice3ImpactErrors () {\n      const errors = []\n      if (!this.$v.choice3Impact.$dirty) return errors\n      !this.$v.choice3Impact.required && errors.push('choice3 Impact Text is required')\n      return errors\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/questions"}]}