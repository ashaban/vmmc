{"remainingRequest":"/home/ashaban/vmmc/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/ashaban/vmmc/src/components/Game/Question.vue?vue&type=style&index=0&id=1f27f9dd&scoped=true&lang=css&","dependencies":[{"path":"/home/ashaban/vmmc/src/components/Game/Question.vue","mtime":1536578317766},{"path":"/home/ashaban/vmmc/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/ashaban/vmmc/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/ashaban/vmmc/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/ashaban/vmmc/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/ashaban/vmmc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#question {\n  padding: 20px;\n}\n.choices {\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 20px;\n  margin: 10px;\n  background-color: #7ce5f8;\n  text-align: left;\n}\n.choices:hover {\n  background-color: #3ead68;\n  color: white;\n}\n.selectedChoice {\n  background-color: #3ead68;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 20px;\n  margin: 10px;\n  color: white;\n  text-align: left;\n}\n.scroll {\n  overflow-y: auto;\n}\n.meter_box {\n  position: relative;\n  background-image: url(\"../../assets/images/meter_box.png\");\n  width: 1000;\n  height: 800;\n  right: 100px;\n}\n.meter_arrow {\n  display: inline-block;\n  position: relative;\n  background: url(\"../../assets/images/meter_arrow.png\") no-repeat;\n}\n.meter_arrow_satisfied {\n  bottom: -30px;\n  left: 90px;\n  transform: rotate(38deg);\n}\n.meter_arrow_interested {\n  bottom: 90px;\n  left: 100px;\n  transform: rotate(-5deg);\n}\n.meter_arrow_neutral {\n  bottom: 200px;\n  left: 24px;\n  transform: rotate(-49deg);\n}\n.meter_arrow_unsure {\n  bottom: 234px;\n  left: -117px;\n  transform: rotate(-103deg);\n}\n.meter_arrow_unhappy {\n  bottom: 170px;\n  left: -230px;\n  transform: rotate(-138deg);\n}\n",{"version":3,"sources":["Question.vue"],"names":[],"mappingsfile":"Question.vue","sourceRoot":"src/components/Game","sourcesContent":["<template>\n\t<v-container>\n\t\t<template v-if=\"$store.state.moduleProgress.completed == true\">\n\t\t\t<v-alert type=\"info\" :value=\"true\">\n\t\t\t\t<b>Congratulations</b>\n\t\t\t\t<p>\n\t\t\t\t\tYou have finished this module\n\t\t\t\t</p>\n\t\t\t</v-alert>\n\t\t</template>\n\t\t<template v-else>\n\t\t\t<v-layout column>\n\t\t\t\t<v-flex>\n\t\t\t\t\t<center><b>A Serious Game</b></center>\n\t\t\t\t</v-flex>\n\t\t\t\t<v-flex id=\"question\" height=\"1\">\n\t\t\t\t\t<v-card class=\"scroll\" height=\"100\">\n\t\t\t\t\t\t<v-card-text>\n\t\t\t\t\t\t\t<v-layout>\n\t\t\t\t\t\t\t\t<v-flex xs1>\n\t\t\t\t\t\t\t\t\t{{questionNumber}}\t\n\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t\t<v-flex xs11 style=\"text-align:left\">\n\t\t\t\t\t\t\t\t\t{{question}}\n\t\t\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t\t</v-layout>\n\t\t\t\t\t\t</v-card-text>\n\t\t\t\t\t</v-card>\n\t\t\t\t</v-flex>\n\t\t\t\t<v-flex>\n\t\t\t\t\t<div id=\"answer\">\n\t\t\t\t<v-layout column>\n\t\t\t\t\t<template v-for=\"(choice,index) in choices\">\n\t\t\t\t\t\t<v-flex class=\"choices\" :ref='index' :key=\"index\" @click=\"choiceSelected(index)\">\n\t\t\t\t\t\t\t{{choice.choiceText}}\n\t\t\t\t\t\t</v-flex>\n\t\t\t\t</template>\n\t\t\t\t</v-layout>\n\t\t\t</div>\n\t\t\t\t</v-flex>\n\t\t\t</v-layout>\n\t\t\t<v-layout row wrap>\n\t\t\t\t<v-flex height=\"500px\">\n\t\t\t\t\t<v-layout row>\n\t\t\t\t\t\t<v-flex xs4>\n\t\t\t\t\t\t\t<v-icon large @click=\"checkAnswer()\" style=\"cursor:pointer\">fast_forward</v-icon>\n\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t<v-flex xs4>\n\t\t\t\t\t\t\t<div class=\"meter_box\" style=\"height:170px;width:450px\"></div>\n\t\t\t\t\t\t\t<div :class=\"[moodClass, 'meter_arrow']\" style=\"height:85px;width:400px\"></div>\n\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t\t<v-flex xs4>\n\t\t\t\t\t\t\t<v-icon large @click=\"loadPrevQuestion()\" style=\"cursor:pointer\">fast_rewind</v-icon>\n\t\t\t\t\t\t</v-flex>\n\t\t\t\t\t</v-layout>\n\t\t\t\t</v-flex>\n\t\t\t</v-layout>\n\t\t\t<v-layout>\n\t\t\t\t<v-flex xs12>\n\t\t\t\t\t<v-toolbar color=\"white\">\n\t\t\t\t\t\tAccumulated Points\n\t\t\t\t\t\t<v-avatar color=\"indigo\" size=\"50px\">\n\t\t\t\t\t\t\t<span class=\"white--text\">\n\t\t\t\t\t\t\t\t<b>{{accummulatedPoints}}</b>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</v-avatar>\n\t\t\t\t\t</v-toolbar>\n\t\t\t\t</v-flex>\n\t\t\t</v-layout>\n\t\t</template>\n\t</v-container>\n</template>\n\n<script>\n\timport {eventBus} from '../../main'\n\timport {module1} from '../modules/module1.js'\n\texport default{\n\t\tdata () {\n\t\t\treturn {\n\t\t\t\tquestion: '',\n\t\t\t\tchoices:[],\n\t\t\t\tgameRunning: false,\n\t\t\t\tnextQuestion: null,\n\t\t\t\tprevQuestion: null,\n\t\t\t\tclient: '',\n\t\t\t\tquestionNumber: 1,\n\t\t\t\tselectedChoice: {},\n\t\t\t\tselectedIndex: '',\n\t\t\t\taccummulatedPoints: 0,\n\t\t\t\tselectedAnswers: {\n\t\t\t\t\t'clientA': {},\n\t\t\t\t\t'clientB': {},\n\t\t\t\t\t'clientC': {}\n\t\t\t\t},\n\t\t\t\tmood: 'interested',\n\t\t\t\tmoodClass: 'meter_arrow_interested',\n\t\t\t\tmoods: ['unhappy','unsure','neutral','interested','satisfied']\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tchoiceSelected (index) {\n\t\t\t\t//ensure that an answer is not changed\n\t\t\t\tif (this.selectedAnswers[this.client].hasOwnProperty([this.questionNumber-1])) {\n\t\t\t\t\tindex = this.selectedAnswers[this.client][this.questionNumber-1]\n\t\t\t\t}\n\t\t\t\tthis.selectedChoice = this.choices[index]\n\t\t\t\tthis.selectedIndex = index\n\t\t\t\tthis.$refs[index][0].className = 'flex selectedChoice'\n\t\t\t\tfor (let k in this.choices) {\n\t\t\t\t\tk = parseInt(k)\n\t\t\t\t\tif (k === index) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tthis.$refs[k][0].className = 'flex choices'\n\t\t\t\t}\n\t\t\t},\n\t\t\tchangeMood (marks) {\n\t\t\t\tlet moodIndex = this.moods.indexOf(this.mood)\n\t\t\t\tmoodIndex += marks\n\t\t\t\tif (this.moods[moodIndex] === undefined) {\n\t\t\t\t\tif (moodIndex <= 0) {\n\t\t\t\t\t\tthis.mood = 'unhappy'\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.mood = 'satisfied'\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.mood = this.moods[moodIndex]\n\t\t\t\t}\n\t\t\t\tif (this.mood === 'satisfied') {\n\t\t\t\t\tthis.moodClass = 'meter_arrow_satisfied'\n\t\t\t\t} else if (this.mood === 'interested') {\n\t\t\t\t\tthis.moodClass = 'meter_arrow_interested'\n\t\t\t\t} else if (this.mood === 'neutral') {\n\t\t\t\t\tthis.moodClass = 'meter_arrow_neutral'\n\t\t\t\t} else if (this.mood === 'unsure') {\n\t\t\t\t\tthis.moodClass = 'meter_arrow_unsure'\n\t\t\t\t} else if (this.mood === 'unhappy') {\n\t\t\t\t\tthis.moodClass = 'meter_arrow_unhappy'\n\t\t\t\t}\n\t\t\t},\n\t\t\tcheckAnswer () {\n\t\t\t\tif (Object.keys(this.selectedChoice).length === 0) {\n\t\t\t\t\tthis.$store.state.dialogError = true\n\t\t\t\t\tthis.$store.state.errorTitle = 'Error'\n\t\t\t\t\tthis.$store.state.errorDescription = 'Select an answer to proceed'\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (!this.selectedAnswers[this.client].hasOwnProperty([this.questionNumber-1])) {\n\t\t\t\t\tthis.selectedAnswers[this.client][this.questionNumber-1] = this.selectedIndex\n\t\t\t\t\tlet marks = parseInt(this.selectedChoice.impact)\n\t\t\t\t\tthis.accummulatedPoints +=  marks\n\t\t\t\t\tthis.changeMood (marks)\n\t\t\t\t}\n\t\t\t\tthis.selectedChoice = {}\n\t\t\t\tthis.loadNextQuestion ()\n\t\t\t},\n\t\t\tloadPrevQuestion () {\n\t\t\t\tif (this.prevQuestion === null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (this.prevQuestion === 'clientA' || this.prevQuestion === 'clientB') {\n\t\t\t\t\tthis.client = this.prevQuestion\n\t\t\t\t\tthis.prevQuestion = last(Object.keys (module1[this.client]))\n\t\t\t\t\tthis.questionNumber = this.prevQuestion++\n\t\t\t\t} else {\n\t\t\t\t\tthis.questionNumber--\n\t\t\t\t}\n\t\t\t\tthis.question = module1[this.client][this.prevQuestion].situationText\n\t\t\t\tthis.choices = module1[this.client][this.prevQuestion].choices\n\t\t\t\tthis.nextQuestion = module1[this.client][this.prevQuestion].nextMove\n\t\t\t\tthis.prevQuestion = module1[this.client][this.prevQuestion].prevMove\n\t\t\t\tif (this.selectedAnswers[this.client].hasOwnProperty([this.questionNumber-1])) {\n\t\t\t\t\tthis.choiceSelected (this.selectedAnswers[this.client][this.questionNumber-1])\n\t\t\t\t}\n\t\t\t},\n\t\t\tloadNextQuestion (){\n\t\t\t\tif(!this.gameRunning || this.nextQuestion === 'clientB' || this.nextQuestion === 'clientC') {\n\t\t\t\t\tthis.questionNumber = 1\n\t\t\t\t\tif(!this.gameRunning) {\n\t\t\t\t\t\tthis.client = 'clientA'\n\t\t\t\t\t\tthis.gameRunning = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.client = this.nextQuestion\n\t\t\t\t\t}\n\t\t\t\t\tthis.nextQuestion = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.questionNumber++\n\t\t\t\t}\n\n\t\t\t\tif(this.nextQuestion === null){\n\t\t\t\t\tthis.$store.state.moduleProgress.completed = true\n\t\t\t\t\tthis.$store.state.moduleProgress.module = 1\n\t\t\t\t\tthis.prevQuestion = module1[this.client][this.nextQuestion].prevMove\n\t\t\t\t} else if(module1[this.client].hasOwnProperty(this.nextQuestion)){\n\t\t\t\t\tthis.question = module1[this.client][this.nextQuestion].situationText\n\t\t\t\t\tthis.choices = module1[this.client][this.nextQuestion].choices\n\t\t\t\t\tthis.prevQuestion = module1[this.client][this.nextQuestion].prevMove\n\t\t\t\t\tthis.nextQuestion = module1[this.client][this.nextQuestion].nextMove\n\t\t\t\t}\n\n\t\t\t\t// if an answer exist then highligh the answer\n\t\t\t\tif (this.selectedAnswers[this.client].hasOwnProperty([this.questionNumber-1])) {\n\t\t\t\t\tthis.choiceSelected (this.selectedAnswers[this.client][this.questionNumber-1])\n\t\t\t\t}\n\t\t\t\tfor (let k in this.choices) {\n\t\t\t\t\tk = parseInt(k)\n\t\t\t\t\tif (this.$refs[k] === undefined || this.selectedAnswers[this.client][this.questionNumber-1] === k) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tthis.$refs[k][0].className = 'flex choices'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tcreated:function(){\n\t\t\tthis.loadNextQuestion()\n\t\t}\n  };\n</script>\n\n<style scoped>\n#question {\n  padding: 20px;\n}\n.choices {\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 20px;\n  margin: 10px;\n  background-color: #7ce5f8;\n  text-align: left;\n}\n.choices:hover {\n  background-color: #3ead68;\n  color: white;\n}\n.selectedChoice {\n  background-color: #3ead68;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 20px;\n  margin: 10px;\n  color: white;\n  text-align: left;\n}\n.scroll {\n  overflow-y: auto;\n}\n.meter_box {\n  position: relative;\n  background-image: url(\"../../assets/images/meter_box.png\");\n  width: 1000;\n  height: 800;\n  right: 100px;\n}\n.meter_arrow {\n  display: inline-block;\n  position: relative;\n  background: url(\"../../assets/images/meter_arrow.png\") no-repeat;\n}\n.meter_arrow_satisfied {\n  bottom: -30px;\n  left: 90px;\n  transform: rotate(38deg);\n}\n.meter_arrow_interested {\n  bottom: 90px;\n  left: 100px;\n  transform: rotate(-5deg);\n}\n.meter_arrow_neutral {\n  bottom: 200px;\n  left: 24px;\n  transform: rotate(-49deg);\n}\n.meter_arrow_unsure {\n  bottom: 234px;\n  left: -117px;\n  transform: rotate(-103deg);\n}\n.meter_arrow_unhappy {\n  bottom: 170px;\n  left: -230px;\n  transform: rotate(-138deg);\n}\n</style>\n"]}]}